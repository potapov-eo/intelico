{"version":3,"sources":["tableJSON.ts","Table/MyTable.tsx","TableBlock/TableBlock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["data","MyTable","tableParams","dataUrl","JSON","parse","getTableParams","Table","size","aria-label","style","position","StickyHeader","TableRow","header","map","headCell","TableCell","align","TableBody","row","i","cell","styled","TableHead","TableBlock","TableBlockContainer","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAuCMA,EAAO,CACT,SAxCuB,0XAyCvB,SA9BuB,klBA+BvB,SAfuB,oO,eCfdC,EAAU,SAAC,GAAmC,IAEjDC,EDgCoB,SAACC,GAE3B,OAAOC,KAAKC,MAAML,EAAKG,IClCcG,CAFiB,EAAhCH,SAItB,OACI,eAACI,EAAA,EAAD,CAAOC,KAAK,QAAQC,aAAW,eAAeC,MAAO,CAAEC,SAAU,YAAjE,UACI,cAACC,EAAD,UACI,cAACC,EAAA,EAAD,UACKX,EAAYY,OAAOC,KAAI,SAAAC,GAAQ,OAAI,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BF,WAGvE,cAACG,EAAA,EAAD,UACKjB,EAAYkB,IAAIL,KAAI,SAACK,EAAKC,GAAN,OACjB,cAACR,EAAA,EAAD,UACKO,EAAIL,KAAI,SAAAO,GAAI,OAAI,cAACL,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACZI,QAFMD,YAY7BT,EAAeW,YAAOC,IAAPD,CAAH,oFC7BLE,EAAa,SAAC,GAAkC,IAAhCtB,EAA+B,EAA/BA,QAEzB,OACI,cAACuB,EAAD,UACI,cAAC,EAAD,CAASvB,QAASA,OAKxBuB,EAAsBH,IAAOI,IAAV,4ICJVC,MAVf,WACI,OACI,qCACA,cAAC,EAAD,CAAYzB,QAAS,aACrB,cAAC,EAAD,CAAYA,QAAS,aACrB,cAAC,EAAD,CAAYA,QAAS,iBCMd0B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.64f0607a.chunk.js","sourcesContent":["const jsonMockTabletParams1 = `\n{\n    \"header\": [\"1 column\", \"2 column\", \"3 column\", \"4 column\",\"5 column\",\"6 column\",\"7 column\",\"8 column\"],\n    \"row\":[\n     [\"1.1 some text\",\"1.2 some text\",\"1.3 some text\",\"1.4 some text\",\"1.5 some text\",\"1.6 some text\"], \n    [\"2.1\",\"2.2\",\"2.3\",\"2.4\",\"2.5\",\"2.6\"], \n    [\"3.1\",\"3.2\",\"3.3\",\"3.4\",\"3.5\",\"3.6\"],\n    [\"4.1\",\"4.2\",\"4.3\",\"4.4\",\"4.5\",\"4.6\"]\n    ]\n}\n`;\nconst jsonMockTabletParams2 = `\n{\n    \"header\": [\"1 column\", \"2 column\", \"3 column\", \"4 column\",\"5 column\",\"6 column\"],\n    \"row\":[\n     [\"1.1 some text\",\"1.2 some text\",\"1.3 some text\",\"1.4 some text\",\"1.5 some text\",\"1.6 some text\"], \n     [\"2.1\",\"2.2\",\"2.3\",\"2.4\",\"2.5\",\"2.6\"], \n     [\"3.1\",\"3.2\",\"3.3\",\"3.4\",\"3.5\",\"3.6\"],\n     [\"4.1\",\"4.2\",\"4.3\",\"4.4\",\"4.5\",\"4.6\"],\n     [\"5.1\",\"5.2\",\"5.3\",\"5.4\",\"5.5\",\"5.6\"],\n     [\"6.1\",\"6.2\",\"6.3\",\"6.4\",\"6.5\",\"6.6\"],\n     [\"7.1\",\"7.2\",\"7.3\",\"7,4\",\"7.5\",\"7.6\"],\n     [\"8.1\",\"8.2\",\"8.3\",\"8,4\",\"8.5\",\"8.6\"],\n     [\"9.1\",\"9.2\",\"9.3\",\"9,4\",\"9.5\",\"9.6\"]          \n    ]\n}\n`;\nconst jsonMockTabletParams3 = `\n\n{\n    \"header\": [\"1 column\", \"2 column\", \"3 column\", \"4 column\"],\n    \"row\":[\n    [\"1.1\",\"1.2\",\"1.3\",\"1.4\"], \n    [\"2.1\",\"2.2\",\"2.3\",\"2.4\"], \n    [\"3.1\",\"3.2\",\"3.3\",\"3.4\"],\n    [\"4.1\",\"4.2\",\"4.3\",\"4.4\"]\n    ]\n}\n`;\nconst data = {\n    'dataUrl1': jsonMockTabletParams1,\n    'dataUrl2': jsonMockTabletParams2,\n    'dataUrl3': jsonMockTabletParams3,\n\n};\n\nexport const getTableParams = (dataUrl: string) => {\n    // @ts-ignore\n    return JSON.parse(data[dataUrl]);\n};\nexport type tableParamsType = {\n    'header': Array<string>,\n    'row': Array<Array<string>>\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { getTableParams, tableParamsType } from '../tableJSON';\nimport styled from 'styled-components';\n\ntype MyTablePropsType = {\n    dataUrl: string\n}\nexport const MyTable = ({ dataUrl }: MyTablePropsType) => {\n\n    const tableParams: tableParamsType = getTableParams(dataUrl);\n    debugger\n    return (\n        <Table size=\"small\" aria-label=\"sticky table\" style={{ position: 'relative' }}>\n            <StickyHeader>\n                <TableRow>\n                    {tableParams.header.map(headCell => <TableCell align=\"center\">{headCell}</TableCell>)}\n                </TableRow>\n            </StickyHeader>\n            <TableBody>\n                {tableParams.row.map((row, i) => (\n                    <TableRow key={i}>\n                        {row.map(cell => <TableCell align=\"center\">\n                            {cell}\n                        </TableCell>)}\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    );\n};\n\n\nconst StickyHeader = styled(TableHead)`\n  position: sticky;\n  top: 0;\n  background: #dbdbdb;\n`;\n","import React from 'react';\nimport { MyTable } from '../Table/MyTable';\nimport styled from 'styled-components';\n\ntype TableBlockProps = {\n    dataUrl: string\n}\n\nexport const TableBlock = ({ dataUrl }: TableBlockProps) => {\n\n    return (\n        <TableBlockContainer >\n            <MyTable dataUrl={dataUrl}/>\n        </TableBlockContainer>\n    );\n};\n\nconst TableBlockContainer = styled.div`\nposition: relative;\nmax-width: 600px;\nbackground: #dbdbdb;\nmargin: 20px 0;\noverflow: auto;\nheight: 250px;\n`\n","import React from 'react';\nimport { TableBlock } from './TableBlock/TableBlock';\n\nfunction App() {\n    return (\n        <>\n        <TableBlock dataUrl={\"dataUrl1\"} />\n        <TableBlock dataUrl={\"dataUrl2\"} />\n        <TableBlock dataUrl={\"dataUrl3\"} />\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}